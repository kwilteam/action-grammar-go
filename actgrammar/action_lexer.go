// Code generated from ActionLexer.g4 by ANTLR 4.12.0. DO NOT EDIT.

package actgrammar

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ActionLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var actionlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func actionlexerLexerInit() {
	staticData := &actionlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "';'", "'('", "')'", "','", "'$'", "'@'", "'='", "'.'", "'+'", "'-'",
		"'*'", "'/'", "'%'", "'~'", "'||'", "'<<'", "'>>'", "'&'", "'|'", "'=='",
		"'<'", "'<='", "'>'", "'>='", "'!='", "'<>'", "", "", "", "", "", "'not'",
		"'and'", "'or'",
	}
	staticData.symbolicNames = []string{
		"", "SCOL", "L_PAREN", "R_PAREN", "COMMA", "DOLLAR", "AT", "ASSIGN",
		"PERIOD", "PLUS", "MINUS", "STAR", "DIV", "MOD", "TILDE", "PIPE2", "LT2",
		"GT2", "AMP", "PIPE", "EQ", "LT", "LT_EQ", "GT", "GT_EQ", "SQL_NOT_EQ1",
		"SQL_NOT_EQ2", "SELECT_", "INSERT_", "UPDATE_", "DELETE_", "WITH_",
		"NOT_", "AND_", "OR_", "SQL_KEYWORDS", "SQL_STMT", "IDENTIFIER", "VARIABLE",
		"BLOCK_VARIABLE", "UNSIGNED_NUMBER_LITERAL", "SIGNED_NUMBER_LITERAL",
		"STRING_LITERAL", "WS", "TERMINATOR", "BLOCK_COMMENT", "LINE_COMMENT",
	}
	staticData.ruleNames = []string{
		"SCOL", "L_PAREN", "R_PAREN", "COMMA", "DOLLAR", "AT", "ASSIGN", "PERIOD",
		"PLUS", "MINUS", "STAR", "DIV", "MOD", "TILDE", "PIPE2", "LT2", "GT2",
		"AMP", "PIPE", "EQ", "LT", "LT_EQ", "GT", "GT_EQ", "SQL_NOT_EQ1", "SQL_NOT_EQ2",
		"SELECT_", "INSERT_", "UPDATE_", "DELETE_", "WITH_", "NOT_", "AND_",
		"OR_", "SQL_KEYWORDS", "SQL_STMT", "IDENTIFIER", "VARIABLE", "BLOCK_VARIABLE",
		"UNSIGNED_NUMBER_LITERAL", "SIGNED_NUMBER_LITERAL", "STRING_LITERAL",
		"WS", "TERMINATOR", "BLOCK_COMMENT", "LINE_COMMENT", "WSNL", "DIGIT",
		"DOUBLE_QUOTE_STRING_CHAR", "SINGLE_QUOTE_STRING_CHAR", "DOUBLE_QUOTE_STRING",
		"SINGLE_QUOTE_STRING",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 46, 326, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 1,
		0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1,
		6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1,
		16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20,
		1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1,
		24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1,
		28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29,
		1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1,
		32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 3, 34, 215, 8, 34, 1, 35, 1, 35, 4, 35, 219, 8, 35, 11, 35, 12,
		35, 220, 1, 36, 1, 36, 5, 36, 225, 8, 36, 10, 36, 12, 36, 228, 9, 36, 1,
		37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 4, 39, 237, 8, 39, 11, 39,
		12, 39, 238, 1, 40, 3, 40, 242, 8, 40, 1, 40, 4, 40, 245, 8, 40, 11, 40,
		12, 40, 246, 1, 41, 1, 41, 3, 41, 251, 8, 41, 1, 42, 4, 42, 254, 8, 42,
		11, 42, 12, 42, 255, 1, 42, 1, 42, 1, 43, 4, 43, 261, 8, 43, 11, 43, 12,
		43, 262, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 5, 44, 271, 8, 44, 10,
		44, 12, 44, 274, 9, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45,
		1, 45, 1, 45, 5, 45, 285, 8, 45, 10, 45, 12, 45, 288, 9, 45, 1, 45, 1,
		45, 1, 46, 4, 46, 293, 8, 46, 11, 46, 12, 46, 294, 1, 47, 1, 47, 1, 48,
		1, 48, 1, 48, 3, 48, 302, 8, 48, 1, 49, 1, 49, 1, 49, 3, 49, 307, 8, 49,
		1, 50, 1, 50, 5, 50, 311, 8, 50, 10, 50, 12, 50, 314, 9, 50, 1, 50, 1,
		50, 1, 51, 1, 51, 5, 51, 320, 8, 51, 10, 51, 12, 51, 323, 9, 51, 1, 51,
		1, 51, 1, 272, 0, 52, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8,
		17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17,
		35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26,
		53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35,
		71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44,
		89, 45, 91, 46, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 1, 0, 24, 2,
		0, 83, 83, 115, 115, 2, 0, 69, 69, 101, 101, 2, 0, 76, 76, 108, 108, 2,
		0, 67, 67, 99, 99, 2, 0, 84, 84, 116, 116, 2, 0, 73, 73, 105, 105, 2, 0,
		78, 78, 110, 110, 2, 0, 82, 82, 114, 114, 2, 0, 85, 85, 117, 117, 2, 0,
		80, 80, 112, 112, 2, 0, 68, 68, 100, 100, 2, 0, 65, 65, 97, 97, 2, 0, 87,
		87, 119, 119, 2, 0, 72, 72, 104, 104, 2, 0, 59, 59, 125, 125, 2, 0, 65,
		90, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 43, 43, 45, 45,
		2, 0, 9, 9, 32, 32, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 13, 13, 32, 32,
		1, 0, 48, 57, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13,
		39, 39, 92, 92, 338, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0,
		0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0,
		0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1,
		0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29,
		1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0,
		37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0,
		0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0,
		0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0,
		0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1,
		0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75,
		1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0,
		83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0,
		0, 91, 1, 0, 0, 0, 1, 105, 1, 0, 0, 0, 3, 107, 1, 0, 0, 0, 5, 109, 1, 0,
		0, 0, 7, 111, 1, 0, 0, 0, 9, 113, 1, 0, 0, 0, 11, 115, 1, 0, 0, 0, 13,
		117, 1, 0, 0, 0, 15, 119, 1, 0, 0, 0, 17, 121, 1, 0, 0, 0, 19, 123, 1,
		0, 0, 0, 21, 125, 1, 0, 0, 0, 23, 127, 1, 0, 0, 0, 25, 129, 1, 0, 0, 0,
		27, 131, 1, 0, 0, 0, 29, 133, 1, 0, 0, 0, 31, 136, 1, 0, 0, 0, 33, 139,
		1, 0, 0, 0, 35, 142, 1, 0, 0, 0, 37, 144, 1, 0, 0, 0, 39, 146, 1, 0, 0,
		0, 41, 149, 1, 0, 0, 0, 43, 151, 1, 0, 0, 0, 45, 154, 1, 0, 0, 0, 47, 156,
		1, 0, 0, 0, 49, 159, 1, 0, 0, 0, 51, 162, 1, 0, 0, 0, 53, 165, 1, 0, 0,
		0, 55, 172, 1, 0, 0, 0, 57, 179, 1, 0, 0, 0, 59, 186, 1, 0, 0, 0, 61, 193,
		1, 0, 0, 0, 63, 198, 1, 0, 0, 0, 65, 202, 1, 0, 0, 0, 67, 206, 1, 0, 0,
		0, 69, 214, 1, 0, 0, 0, 71, 216, 1, 0, 0, 0, 73, 222, 1, 0, 0, 0, 75, 229,
		1, 0, 0, 0, 77, 232, 1, 0, 0, 0, 79, 236, 1, 0, 0, 0, 81, 241, 1, 0, 0,
		0, 83, 250, 1, 0, 0, 0, 85, 253, 1, 0, 0, 0, 87, 260, 1, 0, 0, 0, 89, 266,
		1, 0, 0, 0, 91, 280, 1, 0, 0, 0, 93, 292, 1, 0, 0, 0, 95, 296, 1, 0, 0,
		0, 97, 301, 1, 0, 0, 0, 99, 306, 1, 0, 0, 0, 101, 308, 1, 0, 0, 0, 103,
		317, 1, 0, 0, 0, 105, 106, 5, 59, 0, 0, 106, 2, 1, 0, 0, 0, 107, 108, 5,
		40, 0, 0, 108, 4, 1, 0, 0, 0, 109, 110, 5, 41, 0, 0, 110, 6, 1, 0, 0, 0,
		111, 112, 5, 44, 0, 0, 112, 8, 1, 0, 0, 0, 113, 114, 5, 36, 0, 0, 114,
		10, 1, 0, 0, 0, 115, 116, 5, 64, 0, 0, 116, 12, 1, 0, 0, 0, 117, 118, 5,
		61, 0, 0, 118, 14, 1, 0, 0, 0, 119, 120, 5, 46, 0, 0, 120, 16, 1, 0, 0,
		0, 121, 122, 5, 43, 0, 0, 122, 18, 1, 0, 0, 0, 123, 124, 5, 45, 0, 0, 124,
		20, 1, 0, 0, 0, 125, 126, 5, 42, 0, 0, 126, 22, 1, 0, 0, 0, 127, 128, 5,
		47, 0, 0, 128, 24, 1, 0, 0, 0, 129, 130, 5, 37, 0, 0, 130, 26, 1, 0, 0,
		0, 131, 132, 5, 126, 0, 0, 132, 28, 1, 0, 0, 0, 133, 134, 5, 124, 0, 0,
		134, 135, 5, 124, 0, 0, 135, 30, 1, 0, 0, 0, 136, 137, 5, 60, 0, 0, 137,
		138, 5, 60, 0, 0, 138, 32, 1, 0, 0, 0, 139, 140, 5, 62, 0, 0, 140, 141,
		5, 62, 0, 0, 141, 34, 1, 0, 0, 0, 142, 143, 5, 38, 0, 0, 143, 36, 1, 0,
		0, 0, 144, 145, 5, 124, 0, 0, 145, 38, 1, 0, 0, 0, 146, 147, 5, 61, 0,
		0, 147, 148, 5, 61, 0, 0, 148, 40, 1, 0, 0, 0, 149, 150, 5, 60, 0, 0, 150,
		42, 1, 0, 0, 0, 151, 152, 5, 60, 0, 0, 152, 153, 5, 61, 0, 0, 153, 44,
		1, 0, 0, 0, 154, 155, 5, 62, 0, 0, 155, 46, 1, 0, 0, 0, 156, 157, 5, 62,
		0, 0, 157, 158, 5, 61, 0, 0, 158, 48, 1, 0, 0, 0, 159, 160, 5, 33, 0, 0,
		160, 161, 5, 61, 0, 0, 161, 50, 1, 0, 0, 0, 162, 163, 5, 60, 0, 0, 163,
		164, 5, 62, 0, 0, 164, 52, 1, 0, 0, 0, 165, 166, 7, 0, 0, 0, 166, 167,
		7, 1, 0, 0, 167, 168, 7, 2, 0, 0, 168, 169, 7, 1, 0, 0, 169, 170, 7, 3,
		0, 0, 170, 171, 7, 4, 0, 0, 171, 54, 1, 0, 0, 0, 172, 173, 7, 5, 0, 0,
		173, 174, 7, 6, 0, 0, 174, 175, 7, 0, 0, 0, 175, 176, 7, 1, 0, 0, 176,
		177, 7, 7, 0, 0, 177, 178, 7, 4, 0, 0, 178, 56, 1, 0, 0, 0, 179, 180, 7,
		8, 0, 0, 180, 181, 7, 9, 0, 0, 181, 182, 7, 10, 0, 0, 182, 183, 7, 11,
		0, 0, 183, 184, 7, 4, 0, 0, 184, 185, 7, 1, 0, 0, 185, 58, 1, 0, 0, 0,
		186, 187, 7, 10, 0, 0, 187, 188, 7, 1, 0, 0, 188, 189, 7, 2, 0, 0, 189,
		190, 7, 1, 0, 0, 190, 191, 7, 4, 0, 0, 191, 192, 7, 1, 0, 0, 192, 60, 1,
		0, 0, 0, 193, 194, 7, 12, 0, 0, 194, 195, 7, 5, 0, 0, 195, 196, 7, 4, 0,
		0, 196, 197, 7, 13, 0, 0, 197, 62, 1, 0, 0, 0, 198, 199, 5, 110, 0, 0,
		199, 200, 5, 111, 0, 0, 200, 201, 5, 116, 0, 0, 201, 64, 1, 0, 0, 0, 202,
		203, 5, 97, 0, 0, 203, 204, 5, 110, 0, 0, 204, 205, 5, 100, 0, 0, 205,
		66, 1, 0, 0, 0, 206, 207, 5, 111, 0, 0, 207, 208, 5, 114, 0, 0, 208, 68,
		1, 0, 0, 0, 209, 215, 3, 53, 26, 0, 210, 215, 3, 55, 27, 0, 211, 215, 3,
		57, 28, 0, 212, 215, 3, 59, 29, 0, 213, 215, 3, 61, 30, 0, 214, 209, 1,
		0, 0, 0, 214, 210, 1, 0, 0, 0, 214, 211, 1, 0, 0, 0, 214, 212, 1, 0, 0,
		0, 214, 213, 1, 0, 0, 0, 215, 70, 1, 0, 0, 0, 216, 218, 3, 69, 34, 0, 217,
		219, 8, 14, 0, 0, 218, 217, 1, 0, 0, 0, 219, 220, 1, 0, 0, 0, 220, 218,
		1, 0, 0, 0, 220, 221, 1, 0, 0, 0, 221, 72, 1, 0, 0, 0, 222, 226, 7, 15,
		0, 0, 223, 225, 7, 16, 0, 0, 224, 223, 1, 0, 0, 0, 225, 228, 1, 0, 0, 0,
		226, 224, 1, 0, 0, 0, 226, 227, 1, 0, 0, 0, 227, 74, 1, 0, 0, 0, 228, 226,
		1, 0, 0, 0, 229, 230, 3, 9, 4, 0, 230, 231, 3, 73, 36, 0, 231, 76, 1, 0,
		0, 0, 232, 233, 3, 11, 5, 0, 233, 234, 3, 73, 36, 0, 234, 78, 1, 0, 0,
		0, 235, 237, 3, 95, 47, 0, 236, 235, 1, 0, 0, 0, 237, 238, 1, 0, 0, 0,
		238, 236, 1, 0, 0, 0, 238, 239, 1, 0, 0, 0, 239, 80, 1, 0, 0, 0, 240, 242,
		7, 17, 0, 0, 241, 240, 1, 0, 0, 0, 241, 242, 1, 0, 0, 0, 242, 244, 1, 0,
		0, 0, 243, 245, 3, 95, 47, 0, 244, 243, 1, 0, 0, 0, 245, 246, 1, 0, 0,
		0, 246, 244, 1, 0, 0, 0, 246, 247, 1, 0, 0, 0, 247, 82, 1, 0, 0, 0, 248,
		251, 3, 101, 50, 0, 249, 251, 3, 103, 51, 0, 250, 248, 1, 0, 0, 0, 250,
		249, 1, 0, 0, 0, 251, 84, 1, 0, 0, 0, 252, 254, 7, 18, 0, 0, 253, 252,
		1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 253, 1, 0, 0, 0, 255, 256, 1, 0,
		0, 0, 256, 257, 1, 0, 0, 0, 257, 258, 6, 42, 0, 0, 258, 86, 1, 0, 0, 0,
		259, 261, 7, 19, 0, 0, 260, 259, 1, 0, 0, 0, 261, 262, 1, 0, 0, 0, 262,
		260, 1, 0, 0, 0, 262, 263, 1, 0, 0, 0, 263, 264, 1, 0, 0, 0, 264, 265,
		6, 43, 0, 0, 265, 88, 1, 0, 0, 0, 266, 267, 5, 47, 0, 0, 267, 268, 5, 42,
		0, 0, 268, 272, 1, 0, 0, 0, 269, 271, 9, 0, 0, 0, 270, 269, 1, 0, 0, 0,
		271, 274, 1, 0, 0, 0, 272, 273, 1, 0, 0, 0, 272, 270, 1, 0, 0, 0, 273,
		275, 1, 0, 0, 0, 274, 272, 1, 0, 0, 0, 275, 276, 5, 42, 0, 0, 276, 277,
		5, 47, 0, 0, 277, 278, 1, 0, 0, 0, 278, 279, 6, 44, 0, 0, 279, 90, 1, 0,
		0, 0, 280, 281, 5, 47, 0, 0, 281, 282, 5, 47, 0, 0, 282, 286, 1, 0, 0,
		0, 283, 285, 8, 19, 0, 0, 284, 283, 1, 0, 0, 0, 285, 288, 1, 0, 0, 0, 286,
		284, 1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 289, 1, 0, 0, 0, 288, 286,
		1, 0, 0, 0, 289, 290, 6, 45, 0, 0, 290, 92, 1, 0, 0, 0, 291, 293, 7, 20,
		0, 0, 292, 291, 1, 0, 0, 0, 293, 294, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0,
		294, 295, 1, 0, 0, 0, 295, 94, 1, 0, 0, 0, 296, 297, 7, 21, 0, 0, 297,
		96, 1, 0, 0, 0, 298, 302, 8, 22, 0, 0, 299, 300, 5, 92, 0, 0, 300, 302,
		9, 0, 0, 0, 301, 298, 1, 0, 0, 0, 301, 299, 1, 0, 0, 0, 302, 98, 1, 0,
		0, 0, 303, 307, 8, 23, 0, 0, 304, 305, 5, 92, 0, 0, 305, 307, 9, 0, 0,
		0, 306, 303, 1, 0, 0, 0, 306, 304, 1, 0, 0, 0, 307, 100, 1, 0, 0, 0, 308,
		312, 5, 34, 0, 0, 309, 311, 3, 97, 48, 0, 310, 309, 1, 0, 0, 0, 311, 314,
		1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313, 315, 1, 0,
		0, 0, 314, 312, 1, 0, 0, 0, 315, 316, 5, 34, 0, 0, 316, 102, 1, 0, 0, 0,
		317, 321, 5, 39, 0, 0, 318, 320, 3, 99, 49, 0, 319, 318, 1, 0, 0, 0, 320,
		323, 1, 0, 0, 0, 321, 319, 1, 0, 0, 0, 321, 322, 1, 0, 0, 0, 322, 324,
		1, 0, 0, 0, 323, 321, 1, 0, 0, 0, 324, 325, 5, 39, 0, 0, 325, 104, 1, 0,
		0, 0, 17, 0, 214, 220, 226, 238, 241, 246, 250, 255, 262, 272, 286, 294,
		301, 306, 312, 321, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ActionLexerInit initializes any static state used to implement ActionLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewActionLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ActionLexerInit() {
	staticData := &actionlexerLexerStaticData
	staticData.once.Do(actionlexerLexerInit)
}

// NewActionLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewActionLexer(input antlr.CharStream) *ActionLexer {
	ActionLexerInit()
	l := new(ActionLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &actionlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "ActionLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ActionLexer tokens.
const (
	ActionLexerSCOL                    = 1
	ActionLexerL_PAREN                 = 2
	ActionLexerR_PAREN                 = 3
	ActionLexerCOMMA                   = 4
	ActionLexerDOLLAR                  = 5
	ActionLexerAT                      = 6
	ActionLexerASSIGN                  = 7
	ActionLexerPERIOD                  = 8
	ActionLexerPLUS                    = 9
	ActionLexerMINUS                   = 10
	ActionLexerSTAR                    = 11
	ActionLexerDIV                     = 12
	ActionLexerMOD                     = 13
	ActionLexerTILDE                   = 14
	ActionLexerPIPE2                   = 15
	ActionLexerLT2                     = 16
	ActionLexerGT2                     = 17
	ActionLexerAMP                     = 18
	ActionLexerPIPE                    = 19
	ActionLexerEQ                      = 20
	ActionLexerLT                      = 21
	ActionLexerLT_EQ                   = 22
	ActionLexerGT                      = 23
	ActionLexerGT_EQ                   = 24
	ActionLexerSQL_NOT_EQ1             = 25
	ActionLexerSQL_NOT_EQ2             = 26
	ActionLexerSELECT_                 = 27
	ActionLexerINSERT_                 = 28
	ActionLexerUPDATE_                 = 29
	ActionLexerDELETE_                 = 30
	ActionLexerWITH_                   = 31
	ActionLexerNOT_                    = 32
	ActionLexerAND_                    = 33
	ActionLexerOR_                     = 34
	ActionLexerSQL_KEYWORDS            = 35
	ActionLexerSQL_STMT                = 36
	ActionLexerIDENTIFIER              = 37
	ActionLexerVARIABLE                = 38
	ActionLexerBLOCK_VARIABLE          = 39
	ActionLexerUNSIGNED_NUMBER_LITERAL = 40
	ActionLexerSIGNED_NUMBER_LITERAL   = 41
	ActionLexerSTRING_LITERAL          = 42
	ActionLexerWS                      = 43
	ActionLexerTERMINATOR              = 44
	ActionLexerBLOCK_COMMENT           = 45
	ActionLexerLINE_COMMENT            = 46
)
